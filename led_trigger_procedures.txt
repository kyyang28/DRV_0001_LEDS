
A) 当/sys/class/leds/led1/trigger设置为timer属性之后, 就会调用ledtrig-timer.c里的activate函数

led_trigger_store	/* 1. 从trigger_list里找出名为"timer"的trigger */
	list_for_each_entry(trig, &trigger_list, next_trig) {
		if (!strcmp(trigger_name, trig->name)) {
			
			/* 2. 调用led_trigger_set */
			led_trigger_set(led_cdev, trig);
				
				/* 3. 把trigger添加到led_classdev的trig_list链表中 */
				list_add_tail(&led_cdev->trig_list, &trigger->led_cdevs);
				led_cdev->trigger = trigger;

				/* 4. 如果trigger(struct led_trigger *)里有activate函数，调用activate函数 */
				trigger->activate(led_cdev);

					/* 5. 对于"timer", trigger->activate(led_cdev)对应的是ledtrig-timer.c文件中的timer_trig_activate函数 */
					timer_trig_activate

						/* 6. 创建2个文件：delay_on, delay_off */
						// 当执行 echo 100 > /sys/class/leds/led1/delay_on, 对应的led_delay_on_store被调用
						// 当执行 echo 200 > /sys/class/leds/led1/delay_off, 对应的led_delay_off_store被调用
						// 当执行 cat /sys/class/leds/led1/delay_on, 对应的led_delay_on_show被调用
						// 当执行 cat /sys/class/leds/led1/delay_off, 对应的led_delay_off_show被调用

						static DEVICE_ATTR(delay_on, 0644, led_delay_on_show, led_delay_on_store);
						static DEVICE_ATTR(delay_off, 0644, led_delay_off_show, led_delay_off_store);

						device_create_file(led_cdev->dev, &dev_attr_delay_on);
						device_create_file(led_cdev->dev, &dev_attr_delay_off);

						/* 7. 让LED闪烁 */
						// 如果led_cdev->blink_delay_on和led_cdev->blink_delay_off都没有设置的话, 设置delay_on和delay_off分别为500
						led_blink_set(led_cdev, &led_cdev->blink_delay_on, &led_cdev->blink_delay_off);

							/* 8. 设置delay_on和delay_off分别为500 */
							*delay_on = *delay_off = 500;

							/* 9. 调用led_set_software_blink函数 */
							led_set_software_blink(led_cdev, *delay_on, *delay_off);

								/* 10. 使用定时器timer来实现LED闪烁 */
								mod_timer(&led_cdev->blink_timer, jiffies + 1);
		}
	}

B) 当往/sys/class/leds/led1/delay_on里写入一个数字的时候, 比如写入100 ms
例如：echo 100 > /sys/class/leds/led1/delay_on, 就会导致ledtrig-timer.c文件里的led_delay_on_store函数被调用

led_delay_on_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size)
	
	/* 1. 将buf中存的数字字符串转换为数字, 比如 “100” 转换为 100 */
	unsigned long state = simple_strtoul(buf, &after, 10);
	
	/* 2. 调用led_blink_set函数让LED闪烁, 使用之前设置好的blink_delay_off和当前传入的deley_on的时间(存在state中) */
	led_blink_set(led_cdev, &state, &led_cdev->blink_delay_off);

		/* 3. 调用led_set_software_blink函数 */
		led_set_software_blink(led_cdev, *delay_on, *delay_off);

			/* 4. 使用定时器timer来实现LED闪烁 */
			mod_timer(&led_cdev->blink_timer, jiffies + 1);

C) 当往/sys/class/leds/led1/delay_off里写入一个数字的时候, 比如写入200 ms
例如：echo 200 > /sys/class/leds/led1/delay_off, 就会导致ledtrig-timer.c文件里的led_delay_off_store函数被调用

led_delay_off_store(struct device *dev, struct device_attribute *attr, const char *buf, size_t size)

	/* 1. 将buf中存的数字字符串转换为数字, 比如 “200” 转换为 200 */
	unsigned long state = simple_strtoul(buf, &after, 10);

	/* 2. 调用led_blink_set函数让LED闪烁, 使用之前设置好的blink_delay_on和当前传入的deley_off的时间(存在state中) */
	led_blink_set(led_cdev, &led_cdev->blink_delay_on, &state);

		/* 3. 调用led_set_software_blink函数 */
		led_set_software_blink(led_cdev, *delay_on, *delay_off);

			/* 4. 使用定时器timer来实现LED闪烁 */
			mod_timer(&led_cdev->blink_timer, jiffies + 1);
